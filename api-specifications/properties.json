{
  "scriptappy": "1.1.0",
  "info": {
    "name": "@nebula.js/sn-pivot-table:properties",
    "description": "Pivot Table generic object definition",
    "version": "2.1.0",
    "license": "MIT",
    "stability": "experimental",
    "x-qlik-visibility": "public"
  },
  "entries": {
    "properties": {
      "extends": [
        {
          "type": "GenericObjectProperties"
        }
      ],
      "kind": "object",
      "entries": {
        "version": {
          "description": "Current version of this generic object definition",
          "type": "string"
        },
        "qHyperCubeDef": {
          "extends": [
            {
              "type": "HyperCubeDef"
            }
          ],
          "kind": "object",
          "entries": {
            "qAlwaysFullyExpanded": {
              "defaultValue": false,
              "type": "boolean"
            },
            "qDimensions": {
              "kind": "array",
              "items": {
                "type": "#/definitions/DimensionProperties"
              }
            },
            "qMeasures": {
              "kind": "array",
              "items": {
                "type": "#/definitions/MeasureProperties"
              }
            },
            "qSuppressMissing": {
              "defaultValue": true,
              "type": "boolean"
            },
            "qSuppressZero": {
              "defaultValue": false,
              "type": "boolean"
            },
            "qShowTotalsAbove": {
              "defaultValue": true,
              "type": "boolean"
            }
          }
        },
        "showTitles": {
          "description": "Show title for the visualization",
          "optional": true,
          "defaultValue": true,
          "type": "boolean"
        },
        "title": {
          "description": "Visualization title",
          "optional": true,
          "defaultValue": "",
          "kind": "union",
          "items": [
            {
              "type": "string"
            },
            {
              "type": "StringExpression"
            }
          ]
        },
        "subtitle": {
          "description": "Visualization subtitle",
          "optional": true,
          "defaultValue": "",
          "kind": "union",
          "items": [
            {
              "type": "string"
            },
            {
              "type": "StringExpression"
            }
          ]
        },
        "footnote": {
          "description": "Visualization footnote",
          "optional": true,
          "defaultValue": "",
          "kind": "union",
          "items": [
            {
              "type": "string"
            },
            {
              "type": "StringExpression"
            }
          ]
        },
        "nullValueRepresentation": {
          "description": "Null value properties",
          "optional": true,
          "entries": {
            "text": {
              "description": "Null value text",
              "optional": true,
              "defaultValue": "-",
              "type": "string"
            }
          },
          "kind": "object"
        },
        "components": {
          "description": "Holds general styling",
          "nullable": true,
          "kind": "array",
          "items": {
            "type": "#/definitions/Component"
          }
        }
      }
    }
  },
  "definitions": {
    "DimensionProperties": {
      "description": "Extends `NxDimension`, see Engine API: `NxDimension`",
      "extends": [
        {
          "type": "NxDimension"
        }
      ],
      "kind": "object",
      "entries": {
        "qDef": {
          "type": "#/definitions/InlineDimensionDef"
        }
      }
    },
    "MeasureProperties": {
      "description": "Extends `NxMeasure`, see Engine API: `NxMeasure`",
      "extends": [
        {
          "type": "NxMeasure"
        }
      ],
      "kind": "object",
      "entries": {
        "qDefs": {
          "type": "#/definitions/InlineMeasureDef"
        }
      }
    },
    "InlineDimensionDef": {
      "description": "Extends `NxInlineDimensionDef`, see Engine API: `NxInlineDimensionDef`.",
      "extends": [
        {
          "type": "NxInlineDimensionDef"
        }
      ],
      "kind": "object",
      "entries": {
        "columnWidth": {
          "optional": true,
          "type": "#/definitions/ColumnWidth"
        }
      }
    },
    "InlineMeasureDef": {
      "description": "Extends `NxInlineMeasureDef`, see Engine API: `NxInlineMeasureDef`.",
      "extends": [
        {
          "type": "NxInlineMeasureDef"
        }
      ],
      "kind": "object",
      "entries": {
        "columnWidth": {
          "optional": true,
          "type": "#/definitions/ColumnWidth"
        }
      }
    },
    "ColumnWidth": {
      "description": "Column width info. For the left grid, the properties are always applied.\nFor the right grid, only the leaf nodes will listen to the properties, and the columns above will get the width of the leaves accumulated",
      "kind": "object",
      "entries": {
        "type": {
          "description": "Defines how the column width is set. For the right grid, `auto` calculates the width(s) so the total width of the columns equals the right grid width. If the width reaches a minimum value, the columns will overflow. For the left grid, `auto` is N/A and defaults to `fitToContent`. `fitToContent` calculates a width based on the column's content. `pixels` uses a specified pixel value. `percentage` sets the column width to specified percentage of the chart/grid width",
          "kind": "union",
          "items": [
            {
              "kind": "literal",
              "value": "'auto'"
            },
            {
              "kind": "literal",
              "value": "'FitToContent'"
            },
            {
              "kind": "literal",
              "value": "'pixels'"
            },
            {
              "kind": "literal",
              "value": "'percentage'"
            }
          ]
        },
        "pixels": {
          "description": "Pixel value used if type is `pixels`",
          "optional": true,
          "type": "number"
        },
        "percentage": {
          "description": "Percentage value used if type is `percentage`. Note that for the left grid columns, this is a percentage of the whole chart width. For the right grid columns, it is a percentage of the right grid width",
          "optional": true,
          "type": "number"
        }
      }
    },
    "Component": {
      "description": "General styling for all columns.\nSplit up into header and content (body) styling.\nIf any property is not set, default values specific for each property is used.",
      "kind": "object",
      "entries": {
        "key": {
          "description": "This should be set to `theme`",
          "type": "string"
        },
        "content": {
          "optional": true,
          "type": "#/definitions/ContentStyling"
        },
        "header": {
          "optional": true,
          "type": "#/definitions/HeaderStyling"
        }
      }
    },
    "ContentStyling": {
      "description": "Holds properties for font size, font color and hover styling.",
      "kind": "object",
      "entries": {
        "fontSize": {
          "description": "Defaults to `14`",
          "optional": true,
          "type": "number"
        },
        "fontColor": {
          "description": "Defaults to `#404040`",
          "optional": true,
          "type": "#/definitions/PaletteColor"
        },
        "hoverEffect": {
          "description": "Toggles hover effect",
          "optional": true,
          "type": "boolean"
        },
        "hoverColor": {
          "description": "Background hover color. Uses `#f4f4f4` if no hover colors are set, is transparent if only `hoverFontColor` is set",
          "optional": true,
          "type": "#/definitions/PaletteColor"
        },
        "hoverFontColor": {
          "description": "When only `hoverColor` is set, this is adjusted to either `#f4f4f4` or `#ffffff` for optimal contrast",
          "optional": true,
          "type": "#/definitions/PaletteColor"
        },
        "padding": {
          "description": "Css setting for the cell padding, defaults to `4px 12px`",
          "optional": true,
          "type": "string"
        }
      }
    },
    "HeaderStyling": {
      "description": "Holds properties for font size and color.",
      "kind": "object",
      "entries": {
        "fontSize": {
          "description": "Defaults to `14`",
          "optional": true,
          "type": "number"
        },
        "fontColor": {
          "description": "Defaults to `#404040`",
          "optional": true,
          "type": "#/definitions/PaletteColor"
        }
      }
    },
    "PaletteColor": {
      "description": "Color information structure. Holds the actual color and index in palette",
      "kind": "object",
      "entries": {
        "color": {
          "description": "Color as hex string (mandatory if index: -1)",
          "type": "string"
        },
        "index": {
          "description": "Index in palette",
          "type": "number"
        }
      }
    }
  }
}