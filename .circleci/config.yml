version: 2

defaults: &defaults
  working_directory: ~/project
  docker:
    - image: cimg/node:18.10.0

aliases:
  - &restore_yarn_cache
    name: Restore yarn cache
    keys:
      - yarn-packages-{{ .Branch }}-{{ checksum "yarn.lock" }}
      - yarn-packages-{{ .Branch }}
      - yarn-packages-
  - &save_yarn_cache
    name: Save yarn cache
    paths:
      - ~/.cache/yarn
    key: yarn-packages-{{ .Branch }}-{{ checksum "yarn.lock" }}

jobs:
  install:
    <<: *defaults
    steps:
      - checkout
      - restore_cache: *restore_yarn_cache
      - run: yarn install --frozen-lockfile
      - save_cache: *save_yarn_cache
      - store_artifacts:
          path: package.json
      - persist_to_workspace:
          root: ~/project
          paths:
            - .
  build:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: Build
          command: yarn run build
      - persist_to_workspace:
          root: ~/project
          paths:
            - .

  lint:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: Lint
          command: yarn run lint

  unit-tests:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: Unit tests
          command: yarn run test:unit

  rendering-tests:
    <<: *defaults
    docker:
      - image: mcr.microsoft.com/playwright:focal
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: Install playwright
          command: npx playwright install
      - run:
          name: Rendering tests
          command: yarn run test:rendering
      - store_artifacts:
          path: test/rendering/render.mjs-snapshots
      - store_artifacts:
          path: test/rendering/artifacts
      - store_artifacts:
          path: test/rendering/test-report

  types:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: Types
          command: yarn run types:check

  api-spec:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: Build API specification
          command: yarn run spec

  publish-dev:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/project
      - run: zip -r "sn-pivot-table-ext.zip" "./sn-pivot-table-ext"
      - store_artifacts:
          path: ./sn-pivot-table-ext.zip

  publish:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: Setup npm
          command: |
            set -eo pipefail
            # Amend auth token for access to public npm registry for @nebula.js packages
            echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
      - run:
          name: Publish
          command: |
            set -euo pipefail
            PROJ_VER=v$(cat package.json | jq -r '.version')
            TAG_NAME=$(git tag --points-at HEAD)
            if [ "$TAG_NAME" == "$PROJ_VER" ]
            then
              echo "Running >> npm publish"
              npm publish
            fi

  api-governance:
    machine:
      image: ubuntu-2004:current
    working_directory: ~/project
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - run:
          name: Create version.txt
          command: |
            set -x
            if [ -n "${CIRCLE_TAG}" ]; then
              version=${CIRCLE_TAG#v}
            else
              version=$(git describe --tags --abbrev=7 --match "v*")
              version=${version#v}
            fi
            echo "$version" > ./version.txt
            echo "Building $version"
      - run:
          name: Prepare API Compliance
          command: |
            docker pull ghcr.io/qlik-download/api-compliance
            docker create -v /specs --name specs alpine:3.4 /bin/true
            docker cp ./api-specifications/properties.json specs:/specs
      - run:
          name: Run API Compliance
          command: >
            VER=$(cat ./version.txt)

            docker run --volumes-from specs
            -e SPEC_PATHS="e3863ba0-a48d-4034-8a77-1b00ce8a637d@/specs/properties.json"
            -e COMMIT_SHA="$CIRCLE_SHA1"
            -e RELEASE_TAG="$VER"
            -e CREDENTIALS_S3_SECRETKEY="$APICULTURIST_S3"
            -e CREDENTIALS_GITHUB="$APICULTURIST_GITHUB"
            -e CREDENTIALS_COLONY="$APICULTURIST_TOKEN"
            ghcr.io/qlik-download/api-compliance

workflows:
  version: 2
  build-all:
    jobs:
      - install
      - build:
          requires:
            - install
      - unit-tests:
          requires:
            - build
      - rendering-tests:
          requires:
            - build
      - lint:
          requires:
            - build
      - types:
          requires:
            - install
      - api-spec:
          requires:
            - install
      - publish-dev:
          requires:
            - build
      - publish:
          requires:
            - build
            - unit-tests
            - rendering-tests
            - lint
            - types
            - api-spec
          filters:
            branches:
              only:
                - main
      - api-governance:
          context: api-compliance
          filters:
            branches:
              # Forked pull requests have CIRCLE_BRANCH set to pull/XXX
              ignore:
                - /pull\/[0-9]+/
                - renovate/minor-and-patch
            tags:
              only:
                - /v.*/
